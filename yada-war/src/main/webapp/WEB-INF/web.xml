<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_1.xsd" xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">

	<display-name>YADA</display-name>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		<init-param>
			<param-name>confReloadCheckInterval</param-name>
			<param-value>-1</param-value>
		</init-param>
		<init-param>
			<param-name>statusEnabledOnHosts</param-name>
			<param-value>${web.xml.statusEnabledOnHosts}</param-value>
		</init-param>
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>WARN</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>


  <!-- Uncomment the following filter and filter-mapping sections to use the this 3rd party CORS filter implementation.  
       The settings may need to be tweaked. If you are using Apache HTTPD as a reverse proxy for tomcat, 
       it is advisable to set up CORS handling there instead.  This 3rd-party filter was especially important in the 
       pre-tomcat-8x days, but more than likely, the default catalina implementation is preferable (see below.) -->
	<!-- 
	<filter> 
    <filter-name>CORS</filter-name>
    <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
	</filter> 
	<filter-mapping>
	 <filter-name>CORS</filter-name>
	 <url-pattern>/*</url-pattern>
	</filter-mapping>
	-->
	
	<!-- Uncomment the following filter and filter-mapping sections to use the default CORS tomcat implementation.  
	     The settings may need to be tweaked. If you are using Apache HTTPD as a reverse proxy for tomcat, 
	     it is advisable to set up CORS handling there instead.-->
	<!--
	<filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
		<init-param>
			<param-name>cors.allowed.origins</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.methods</param-name>
			<param-value>GET,POST,HEAD,OPTIONS,PUT</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.headers</param-name>
			<param-value>Content-Type,X-Requested-With,accept,content-type,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
		</init-param>
		<init-param>
			<param-name>cors.exposed.headers</param-name>
			<param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
		</init-param>
		<init-param>
			<param-name>cors.support.credentials</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>cors.preflight.maxage</param-name>
			<param-value>1800</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 
	-->

	<servlet>
		<servlet-name>YADA-init</servlet-name>
		<servlet-class>com.novartis.opensource.yada.util.YADAInit</servlet-class>
		<init-param>
			<param-name>ehcache-config</param-name>
			<param-value>/ehcache.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>log4j-init</servlet-name>
		<servlet-class>com.novartis.opensource.yada.util.Log4jInit</servlet-class>
		<init-param>
			<param-name>log4j-init-file</param-name>
			<param-value>WEB-INF/classes/log4j.properties</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<error-page>
		<location>/error.jsp</location>
	</error-page>


</web-app>
